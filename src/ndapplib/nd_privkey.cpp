/* file nd_privkey.cpp 
 * RSA private key 
 * create by auto_tool please DO NOT modify 
 * datetime: 2014-11-11 16:0:5
 */ 

#include "nd_crypt/nd_crypt.h"
#include "ndapplib/applib.h"
/* publish version */
int __g_pirv_publis_num=2 ; 

/* md5 of private key  */
char *__g_pubkey_md5="584dc190c687880a9f3f64d3df2d1ac0" ; 


/* RSA private key  data */ 
 R_RSA_PRIVATE_KEY __nd_pri_key = 
{	512,		//bits of key
	// data of priv_key.modulus
	{ 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	, 0x0, 0x0, 0x0, 0xb5, 0xd4, 0xe8, 0x18, 0x3a, 0x68, 0x99
	, 0x11, 0x9a, 0xd7, 0xe5, 0x5a, 0x21, 0xf7, 0xa1, 0x9f, 0xa6
	, 0x5d, 0xcf, 0x15, 0x7e, 0x34, 0xa5, 0x1c, 0x51, 0x5a, 0x82
	, 0xa0, 0x8f, 0xe0, 0x33, 0x93, 0x17, 0x61, 0xfa, 0x23, 0xb8
	, 0xb7, 0x11, 0xf1, 0x87, 0x57, 0x8c, 0x7f, 0x27, 0xa2, 0x6b
	, 0x7a, 0x90, 0x80, 0x5b, 0xf4, 0x6b, 0xa7, 0xcf, 0x2a, 0xd5
	, 0x4, 0x1f, 0x9, 0xba, 0x56, 0xdc, 0x3},
	// data of priv_key.publicExponent
	{ 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3},
	// data of priv_key.exponent
	{ 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	, 0x0, 0x0, 0x0, 0x79, 0x38, 0x9a, 0xba, 0xd1, 0x9b, 0x10
	, 0xb6, 0x67, 0x3a, 0x98, 0xe6, 0xc1, 0x4f, 0xc1, 0x15, 0x19
	, 0x93, 0xdf, 0x63, 0xa9, 0x78, 0x6e, 0x12, 0xe0, 0xe7, 0x1
	, 0xc0, 0x5f, 0xea, 0xcd, 0xb, 0x99, 0xbb, 0x38, 0x92, 0x79
	, 0x9b, 0x9b, 0x20, 0xd, 0x42, 0x71, 0xa6, 0x6e, 0xd1, 0x4a
	, 0x1, 0x4, 0xe9, 0xf3, 0x8c, 0x88, 0x9, 0x8c, 0xa7, 0xff
	, 0xa9, 0xbf, 0xd3, 0x53, 0x47, 0xf3, 0x3b},
	{	// data of priv_key.prime[0]
	{ 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	, 0x0, 0xe9, 0x8, 0xfc, 0xdd, 0x33, 0x91, 0x31, 0xd4, 0xd3
	, 0x41, 0xc8, 0xa3, 0xb0, 0x79, 0x5, 0x9d, 0x6c, 0x5d, 0xe2
	, 0xe6, 0x50, 0x77, 0x9d, 0x90, 0x4e, 0x63, 0xf1, 0xad, 0x9e
	, 0x4b, 0x47, 0x7},
	// data of priv_key.prime[1]
	{ 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	, 0x0, 0xc7, 0xc0, 0x28, 0x6a, 0xce, 0xbc, 0x77, 0x6c, 0xa0
	, 0x32, 0x19, 0x61, 0xd0, 0xef, 0x76, 0xdb, 0x9c, 0xc3, 0x8b
	, 0xbb, 0x4f, 0x21, 0xde, 0x9e, 0x87, 0x21, 0x8d, 0x9f, 0x1f
	, 0x1f, 0xa8, 0x25}
	},
	{	// data of priv_key.primeExponent[0]
	{ 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	, 0x0, 0x9b, 0x5b, 0x53, 0x3e, 0x22, 0x60, 0xcb, 0xe3, 0x37
	, 0x81, 0x30, 0x6d, 0x20, 0x50, 0xae, 0x68, 0xf2, 0xe9, 0x41
	, 0xee, 0xe0, 0x4f, 0xbe, 0x60, 0x34, 0x42, 0xa1, 0x1e, 0x69
	, 0x87, 0x84, 0xaf},
	// data of priv_key.primeExponent[1]
	{ 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	, 0x0, 0x85, 0x2a, 0xc5, 0x9c, 0x89, 0xd2, 0xfa, 0x48, 0x6a
	, 0xcc, 0x10, 0xeb, 0xe0, 0x9f, 0xa4, 0x92, 0x68, 0x82, 0x5d
	, 0x27, 0x8a, 0x16, 0x94, 0x69, 0xaf, 0x6b, 0xb3, 0xbf, 0x6a
	, 0x15, 0x1a, 0xc3}
	},
	// data of priv_key.coefficient
	{ 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	, 0x0, 0x86, 0x7, 0xfa, 0xfd, 0xe1, 0x3e, 0xe7, 0x8f, 0x80
	, 0x68, 0x46, 0x83, 0xdb, 0xd2, 0x32, 0x41, 0x9e, 0x10, 0x54
	, 0x54, 0xc5, 0x70, 0x2, 0xc5, 0xf4, 0xee, 0x4d, 0x28, 0xcc
	, 0x96, 0xac, 0xe}
} ;

/* RSA private key  data --end */ 

int nd_get_certificate_version(void)
{
	return __g_pirv_publis_num ;
}

char *nd_get_publickey_md5(void)
{
	return __g_pubkey_md5 ;
}

char* nd_calc_privatekey_md5(char text[33])
{
	return MD5CryptToStr32((char*)&__nd_pri_key, sizeof(__nd_pri_key), text) ;
}

R_RSA_PRIVATE_KEY *nd_get_privatekey(void) 
{
	return &__nd_pri_key ;
}

